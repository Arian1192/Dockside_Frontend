'use client';
import {
	Baby,
	HandshakeIcon,
	PiggyBankIcon,
	SpeechIcon,
	TrendingUp,
} from 'lucide-react';
import { PolarAngleAxis, PolarGrid, Radar, RadarChart } from 'recharts';
import {
	Card,
	CardContent,
	CardDescription,
	CardFooter,
	CardHeader,
	CardTitle,
} from '@/components/ui/card';
import {
	ChartConfig,
	ChartContainer,
	ChartLegend,
	ChartLegendContent,
	ChartTooltip,
	ChartTooltipContent,
} from '@/components/ui/chart';

interface ChartRadarProps {
	chartData: any;
	id: number;
}

import { useSortable } from '@dnd-kit/sortable';
import { CSS } from '@dnd-kit/utilities';

const ChartRadar = ({ chartData, id }: ChartRadarProps) => {
	const chartConfig = {
		Fronts: {
			label: 'Fronts',
			color: 'hsl(var(--chart-1))',
			icon: Baby,
		},
		Reorders: {
			label: 'Reorders',
			color: 'hsl(var(--chart-2))',
			icon: TrendingUp,
		},
		Administration: {
			label: 'Administration',
			color: 'hsl(var(--chart-3))',
			icon: PiggyBankIcon,
		},
		CreditControl: {
			label: 'CC',
			color: 'hsl(var(--chart-4))',
			icon: HandshakeIcon,
		},
		CustomerService: {
			label: 'CS',
			color: 'hsl(var(--chart-5))',
			icon: SpeechIcon,
		},
	} satisfies ChartConfig;

	const { attributes, listeners, setNodeRef, transform, transition } =
		useSortable({
			id: id.toString(),
		});
	const style = {
		transform: CSS.Transform.toString(transform),
		transition,
	};

	return (
		<div {...attributes} {...listeners} ref={setNodeRef} style={style}>
			<Card className="w-full">
				<CardHeader className="items-center pb-4">
					<CardTitle>Monthly Radar Chart</CardTitle>
					<CardDescription>
						This radar shows the tickets generated by department for the last 6
						months
					</CardDescription>
				</CardHeader>
				<CardContent>
					<ChartContainer
						config={chartConfig}
						className="mx-auto aspect-square max-h-[250px]"
					>
						<RadarChart
							data={chartData.slice(0, 6)}
							margin={{
								top: -40,
								bottom: -10,
							}}
						>
							<ChartTooltip
								cursor={false}
								content={<ChartTooltipContent indicator="line" />}
							/>
							<PolarAngleAxis dataKey="month" />
							<PolarGrid />
							{Object.keys(chartConfig).map((key, index) => {
								console.log(key);
								return (
									<Radar
										dataKey={`tickets.${key}`}
										fill={chartConfig[key].color}
										fillOpacity={0.6}
										key={index}
										name={chartConfig[key].label}
									/>
								);
							})}
							<ChartLegend className="mt-8" content={<ChartLegendContent />} />
						</RadarChart>
					</ChartContainer>
				</CardContent>
				<CardFooter className="flex-col gap-2 pt-4 text-sm">
					<div className="flex items-center gap-2 font-medium leading-none">
						{/* Trending up by 5.2% this month <TrendingUp className="h-4 w-4" /> */}
					</div>
					<div className="flex items-center gap-2 leading-none text-muted-foreground">
						January - June 2024
					</div>
				</CardFooter>
			</Card>
		</div>
	);
};

export default ChartRadar;
